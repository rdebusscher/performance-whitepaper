/*
 * This file is generated by jOOQ.
 */
package be.rubus.microstream.performance.jooq.model.tables.records;


import be.rubus.microstream.performance.jooq.model.tables.Employee;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeeRecord extends UpdatableRecordImpl<EmployeeRecord> implements Record4<Long, String, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.employee.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.employee.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.employee.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.employee.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.employee.address_id</code>.
     */
    public void setAddressId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.employee.address_id</code>.
     */
    public Long getAddressId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.employee.shop_id</code>.
     */
    public void setShopId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.employee.shop_id</code>.
     */
    public Long getShopId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Employee.EMPLOYEE.ID;
    }

    @Override
    public Field<String> field2() {
        return Employee.EMPLOYEE.NAME;
    }

    @Override
    public Field<Long> field3() {
        return Employee.EMPLOYEE.ADDRESS_ID;
    }

    @Override
    public Field<Long> field4() {
        return Employee.EMPLOYEE.SHOP_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Long component3() {
        return getAddressId();
    }

    @Override
    public Long component4() {
        return getShopId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Long value3() {
        return getAddressId();
    }

    @Override
    public Long value4() {
        return getShopId();
    }

    @Override
    public EmployeeRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EmployeeRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public EmployeeRecord value3(Long value) {
        setAddressId(value);
        return this;
    }

    @Override
    public EmployeeRecord value4(Long value) {
        setShopId(value);
        return this;
    }

    @Override
    public EmployeeRecord values(Long value1, String value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeeRecord
     */
    public EmployeeRecord() {
        super(Employee.EMPLOYEE);
    }

    /**
     * Create a detached, initialised EmployeeRecord
     */
    public EmployeeRecord(Long id, String name, Long addressId, Long shopId) {
        super(Employee.EMPLOYEE);

        setId(id);
        setName(name);
        setAddressId(addressId);
        setShopId(shopId);
    }
}
