/*
 * This file is generated by jOOQ.
 */
package be.rubus.microstream.performance.jooq.model.tables.records;


import be.rubus.microstream.performance.jooq.model.tables.Book;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> implements Record9<Long, String, Double, Double, String, Long, Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.book.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.book.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.book.isbn13</code>.
     */
    public void setIsbn13(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.book.isbn13</code>.
     */
    public String getIsbn13() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.book.purchase_price</code>.
     */
    public void setPurchasePrice(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.book.purchase_price</code>.
     */
    public Double getPurchasePrice() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.book.retail_price</code>.
     */
    public void setRetailPrice(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.book.retail_price</code>.
     */
    public Double getRetailPrice() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.book.title</code>.
     */
    public void setTitle(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.book.title</code>.
     */
    public String getTitle() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.book.author_id</code>.
     */
    public void setAuthorId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.book.author_id</code>.
     */
    public Long getAuthorId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.book.genre_id</code>.
     */
    public void setGenreId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.book.genre_id</code>.
     */
    public Long getGenreId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.book.language_id</code>.
     */
    public void setLanguageId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.book.language_id</code>.
     */
    public Long getLanguageId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.book.publisher_id</code>.
     */
    public void setPublisherId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.book.publisher_id</code>.
     */
    public Long getPublisherId() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, Double, Double, String, Long, Long, Long, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, Double, Double, String, Long, Long, Long, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Book.BOOK.ID;
    }

    @Override
    public Field<String> field2() {
        return Book.BOOK.ISBN13;
    }

    @Override
    public Field<Double> field3() {
        return Book.BOOK.PURCHASE_PRICE;
    }

    @Override
    public Field<Double> field4() {
        return Book.BOOK.RETAIL_PRICE;
    }

    @Override
    public Field<String> field5() {
        return Book.BOOK.TITLE;
    }

    @Override
    public Field<Long> field6() {
        return Book.BOOK.AUTHOR_ID;
    }

    @Override
    public Field<Long> field7() {
        return Book.BOOK.GENRE_ID;
    }

    @Override
    public Field<Long> field8() {
        return Book.BOOK.LANGUAGE_ID;
    }

    @Override
    public Field<Long> field9() {
        return Book.BOOK.PUBLISHER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getIsbn13();
    }

    @Override
    public Double component3() {
        return getPurchasePrice();
    }

    @Override
    public Double component4() {
        return getRetailPrice();
    }

    @Override
    public String component5() {
        return getTitle();
    }

    @Override
    public Long component6() {
        return getAuthorId();
    }

    @Override
    public Long component7() {
        return getGenreId();
    }

    @Override
    public Long component8() {
        return getLanguageId();
    }

    @Override
    public Long component9() {
        return getPublisherId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getIsbn13();
    }

    @Override
    public Double value3() {
        return getPurchasePrice();
    }

    @Override
    public Double value4() {
        return getRetailPrice();
    }

    @Override
    public String value5() {
        return getTitle();
    }

    @Override
    public Long value6() {
        return getAuthorId();
    }

    @Override
    public Long value7() {
        return getGenreId();
    }

    @Override
    public Long value8() {
        return getLanguageId();
    }

    @Override
    public Long value9() {
        return getPublisherId();
    }

    @Override
    public BookRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BookRecord value2(String value) {
        setIsbn13(value);
        return this;
    }

    @Override
    public BookRecord value3(Double value) {
        setPurchasePrice(value);
        return this;
    }

    @Override
    public BookRecord value4(Double value) {
        setRetailPrice(value);
        return this;
    }

    @Override
    public BookRecord value5(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public BookRecord value6(Long value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public BookRecord value7(Long value) {
        setGenreId(value);
        return this;
    }

    @Override
    public BookRecord value8(Long value) {
        setLanguageId(value);
        return this;
    }

    @Override
    public BookRecord value9(Long value) {
        setPublisherId(value);
        return this;
    }

    @Override
    public BookRecord values(Long value1, String value2, Double value3, Double value4, String value5, Long value6, Long value7, Long value8, Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(Long id, String isbn13, Double purchasePrice, Double retailPrice, String title, Long authorId, Long genreId, Long languageId, Long publisherId) {
        super(Book.BOOK);

        setId(id);
        setIsbn13(isbn13);
        setPurchasePrice(purchasePrice);
        setRetailPrice(retailPrice);
        setTitle(title);
        setAuthorId(authorId);
        setGenreId(genreId);
        setLanguageId(languageId);
        setPublisherId(publisherId);
    }
}
